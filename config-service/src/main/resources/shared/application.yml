logging:
  level:
    org.springframework.security: INFO

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000

management:
  endpoints:
    enabled-by-default: true
    web:
      exposure:
        include: health,prometheus
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true

spring:
  datasource:
    password: ${DB_PASSWORD}

---
spring:
  config:
    activate:
      on-profile: docker
  rabbitmq:
    host: rabbitmq
    template:
      exchange: exchange-main
  security:
    oauth2:
      resourceserver:
        jwt:
          public-key-location: http://auth-service:5000/oauth/token_key_new

eureka:
  instance:
    prefer-ip-address: true
  client:
    serviceUrl:
      defaultZone: http://registry:8761/eureka/

security:
  oauth2:
    client:
      accessTokenUri: http://auth-service:5000/oauth/token
---
spring:
  config:
    activate:
      on-profile: local
  rabbitmq:
    host: localhost
    template:
      exchange: exchange-main
  cloud:
    loadbalancer:
      cache:
        enabled: false
  security:
    oauth2:
      resourceserver:
        jwt:
          public-key-location: http://localhost:5000/oauth/token_key_new

eureka:
  instance:
    prefer-ip-address: true
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

security:
  oauth2:
    client:
      accessTokenUri: http://localhost:5000/oauth/token